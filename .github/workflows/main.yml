name: Monitor New Links

on:
  schedule:
    - cron: "*/15 * * * *"  # Executar a cada 15 minutos
  workflow_dispatch: # Permite executar manualmente, se necessário.

jobs:
  monitor-news:
    runs-on: ubuntu-latest

    steps:
    # 1. Fazer o checkout do repositório
    - name: Checkout Repository
      uses: actions/checkout@v2

    # 2. Configurar o ambiente Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    # 3. Cache das dependências do Python
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-python-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-

    - name: Clear pip cache
      run: rm -rf ~/.cache/pip
  
    # 4. Instalar dependências do Python
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # 5. Executar o script com as variáveis de ambiente
    - name: Run Monitoring Script
      env:
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        TO_EMAIL: ${{ secrets.TO_EMAIL }}
        APP_KEY: ${{ secrets.APP_KEY }}            # Chave do app do Dropbox
        APP_SECRET: ${{ secrets.APP_SECRET }}      # Segredo do app do Dropbox
        DROPBOX_TOKEN: ${{ secrets.DROPBOX_TOKEN }} # Token de atualização do Dropbox
      run: python3 ntc_avr.py
