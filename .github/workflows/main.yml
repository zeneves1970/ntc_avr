name: Send Emails on New Links

on:
  push:
    branches:
      - main
  schedule:
    - cron: "*/15 * * * *"  # Executar a cada 15 minutos

jobs:
  process:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    # Step to check if the cache is already updated and needs to be restored
    - name: Restore Cache if Available
      id: cache-restore
      uses: actions/cache@v3
      with:
        path: seen_links_ntc.txt
        key: ${{ runner.os }}-seen-links-cache-ntc-${{ hashFiles('seen_links_ntc.txt') }}
        restore-keys: |
          ${{ runner.os }}-seen-links-cache-ntc-
    - name: Save hash of seen_links_ntc.txt before running the script
      id: hash-before
      run: |
        if [ -f seen_links_ntc.txt ]; then
          hash_before=$(sha256sum seen_links_ntc.txt | cut -d ' ' -f 1)
          echo "Hash before: $hash_before"
          echo "::set-output name=hash_before::$hash_before"
        else
          echo "::set-output name=hash_before::"
        fi
    - name: Run the Python Script
      env:
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        TO_EMAIL: ${{ secrets.TO_EMAIL }}
      run: python3 ntc_avr.py

    - name: Save hash of seen_links_ntc.txt after running the script
      id: hash-after
      run: |
        if [ -f seen_links_ntc.txt ]; then
          hash_after=$(sha256sum seen_links_ntc.txt | cut -d ' ' -f 1)
          echo "Hash after: $hash_after"
          echo "::set-output name=hash_after::$hash_after"
        else
          echo "::set-output name=hash_after::"
        fi
    - name: Check if seen_links_ntc.txt was modified
      run: |
        if [ "${{ steps.hash-before.outputs.hash_before }}" != "${{ steps.hash-after.outputs.hash_after }}" ]; then
          echo "File seen_links_ntc.txt was modified."
        else
          echo "File not modified."
        fi
    # Only save cache if seen_links_ntc.txt was updated
    - name: Save Cache if Links Changed
      if: steps.hash-before.outputs.hash_before != steps.hash-after.outputs.hash_after
      uses: actions/cache@v3
      with:
        path: seen_links_ntc.txt
        key: ${{ runner.os }}-seen-links-cache-ntc-${{ steps.hash-after.outputs.hash_after }}  # Key based on hash after modification
        restore-keys: |
          ${{ runner.os }}-seen-links-cache-ntc-
    - name: Final Check and Cache Status
      run: |
        echo "Cache Key Before: ${{ steps.cache-restore.outputs.cache-key }}"
        echo "New Cache Key After: ${{ steps.hash-after.outputs.hash_after }}"
        if [ -f seen_links_ntc.txt ]; then
          echo "Cache file content after script execution:"
          cat seen_links_ntc.txt
        else
          echo "No cache file found after script execution."
        fi
